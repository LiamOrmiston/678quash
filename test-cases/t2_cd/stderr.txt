==29048== Memcheck, a memory error detector
==29048== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==29048== Using Valgrind-3.9.0 and LibVEX; rerun with -h for copyright info
==29048== Command: /home/a295g044/EECS_678/Project1/quash/quash
==29048== 
IMPLEMENT ME: src/execute.c(line 60): check_jobs_bg_status()
IMPLEMENT ME: src/execute.c(line 312): create_process()
==29049== 
==29049== HEAP SUMMARY:
==29049==     in use at exit: 0 bytes in 0 blocks
==29049==   total heap usage: 9 allocs, 9 frees, 23,170 bytes allocated
==29049== 
==29049== All heap blocks were freed -- no leaks are possible
==29049== 
==29049== For counts of detected and suppressed errors, rerun with: -v
==29049== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
IMPLEMENT ME: src/execute.c(line 348): run_script()
IMPLEMENT ME: src/execute.c(line 60): check_jobs_bg_status()
IMPLEMENT ME: src/execute.c(line 312): create_process()
IMPLEMENT ME: src/execute.c(line 348): run_script()
IMPLEMENT ME: src/execute.c(line 60): check_jobs_bg_status()
IMPLEMENT ME: src/execute.c(line 312): create_process()
==29051== 
==29051== HEAP SUMMARY:
==29051==     in use at exit: 0 bytes in 0 blocks
==29051==   total heap usage: 28 allocs, 28 frees, 31,787 bytes allocated
==29051== 
==29051== All heap blocks were freed -- no leaks are possible
==29051== 
==29051== For counts of detected and suppressed errors, rerun with: -v
==29051== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
IMPLEMENT ME: src/execute.c(line 348): run_script()
IMPLEMENT ME: src/execute.c(line 60): check_jobs_bg_status()
IMPLEMENT ME: src/execute.c(line 312): create_process()
==29052== 
==29052== HEAP SUMMARY:
==29052==     in use at exit: 0 bytes in 0 blocks
==29052==   total heap usage: 36 allocs, 36 frees, 35,675 bytes allocated
==29052== 
==29052== All heap blocks were freed -- no leaks are possible
==29052== 
==29052== For counts of detected and suppressed errors, rerun with: -v
==29052== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
IMPLEMENT ME: src/execute.c(line 348): run_script()
==29048== 
==29048== HEAP SUMMARY:
==29048==     in use at exit: 0 bytes in 0 blocks
==29048==   total heap usage: 36 allocs, 36 frees, 35,675 bytes allocated
==29048== 
==29048== All heap blocks were freed -- no leaks are possible
==29048== 
==29048== For counts of detected and suppressed errors, rerun with: -v
==29048== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
